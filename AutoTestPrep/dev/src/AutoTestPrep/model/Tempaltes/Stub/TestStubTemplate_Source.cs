// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 16.0.0.0
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AutoTestPrep.Model.Tempaltes.Stub
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TestStubTemplate_Source : TestStubTemplate_Base
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("//Declare buffers to store a value passed and pass.\r\n");
            
            #line 8 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateFunctionCalledCountBufferDecalre()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 9 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateFunctionReturnBufferDeclare()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n//Argument buffer\r\n");
            
            #line 12 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
 foreach (var argumentItem in SubFunction.Arguments) { 
            
            #line default
            #line hidden
            
            #line 13 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateFunctionArgumentBufferDeclare(argumentItem)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 14 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateFunctionOutputBufferDeclare(argumentItem)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 15 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
	}	
            
            #line default
            #line hidden
            this.Write("\r\n//Initialize buffers.\r\n");
            
            #line 18 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateBufferInitializeFunction()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t");
            
            #line 20 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateFunctionCalledCountBufferName()));
            
            #line default
            #line hidden
            this.Write(" = 0;\r\n\tfor (int index = 0; index < STUB_BUFFER_SIZE_1; index++) {\r\n");
            
            #line 22 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
 foreach (var argumentItem in SubFunction.Arguments) { 
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 23 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateArgumentInitializeCode_1(argumentItem, "index")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 24 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
	}	
            
            #line default
            #line hidden
            this.Write("\t\tfor (int index2 = 0; index2 < STUB_BUFFER_SIZE_2; index2++) {\r\n");
            
            #line 26 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
 foreach (var argumentItem in SubFunction.Arguments) { 
            
            #line default
            #line hidden
            this.Write("\t\t\t");
            
            #line 27 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateArgumentInitializeCode_2(argumentItem, "index", "index2")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 28 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
	}	
            
            #line default
            #line hidden
            this.Write("\t\t}\r\n\t}\r\n}\r\n\r\n//Stub of function.\r\n");
            
            #line 34 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.SubFunction.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\t");
            
            #line 36 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateLatchReturnValue()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n");
            
            #line 38 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
 foreach (var argumentItem in SubFunction.Arguments) {	
            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 39 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateSetArgumentToBuffer(argumentItem)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 40 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
	}	
            
            #line default
            #line hidden
            this.Write("\tfor (int index  = 0; index < STUB_BUFFER_SIZE_2; index++) {\r\n");
            
            #line 42 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
	foreach (var argumentItem in SubFunction.Arguments) {	
            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 43 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateSetOutputBufferToArgument(argumentItem, "index")));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 44 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
	}	
            
            #line default
            #line hidden
            this.Write("\t}\r\n\r\n\t//Increment called count.\r\n\t");
            
            #line 48 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateCalledCountUpdate()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t//Return value;\r\n\t");
            
            #line 51 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(CreateReturnValue()));
            
            #line default
            #line hidden
            this.Write("\r\n}\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 53 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Stub\TestStubTemplate_Source.tt"

	protected override string CreateFunctionArgumentBufferDeclare(Parameter argument)
	{
		string argumentBufferDeclare = base.CreateFunctionArgumentBufferDeclare(argument);
		argumentBufferDeclare += "[STUB_BUFFER_SIZE_1];";
		return argumentBufferDeclare;
	}

	protected virtual string CreateArgumentInitializeCode_1(Parameter argument, string indexName)
	{
		string variableInitializeCode = $"{this.SubFunction.Name}_{argument.Name}[{indexName}]";
		if (0 < argument.PointerNum) {
			variableInitializeCode += " = null;";
		}
		else
		{
			variableInitializeCode += " = 0;";
		}
		return variableInitializeCode;
	}

	protected virtual string CreateArgumentInitializeCode_2(Parameter argument, string indexName, string indexName2)
	{
		string outputVariable = string.Empty;
		if (1 == argument.PointerNum)
		{
			if ((argument.Mode == Parameter.AccessMode.Out) ||
				(argument.Mode == Parameter.AccessMode.Both))
			{
				outputVariable = $"{this.SubFunction.Name}_{argument.Name}_value[{indexName}] = 0;";
			}
			else
			{
				outputVariable = $"//{argument.Name} is not output.";
			}
		}
		else if (2 == argument.PointerNum)
		{
			if ((argument.Mode == Parameter.AccessMode.Out) ||
				(argument.Mode == Parameter.AccessMode.Both))
			{
				outputVariable = $"{this.SubFunction.Name}_{argument.Name}_value[{indexName}][{indexName2}] = 0;";
			}
			else
			{
				outputVariable = $"//{argument.Name} is not output.";
			}
		}
		else
		{
			outputVariable = $"//{argument.Name} is not output.";
		}
		return outputVariable;
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
