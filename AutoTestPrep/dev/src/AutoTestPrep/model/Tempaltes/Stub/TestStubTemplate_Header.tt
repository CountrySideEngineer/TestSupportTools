<#@ template language="C#"
	inherits="TestStubTemplate_Base" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
#pragma once
//Sub function called count.
<#= CreateFunctionCalledCountBufferDecalre(SubFunction) #>
<#= CreateFunctionReturnBufferDeclare(SubFunction) #>

//Argument buffer.
<# foreach (var argumentItem in SubFunction.Arguments) { #>
<#= CreateFunctionArgumentBufferDeclare(SubFunction, argumentItem) #>
<#	}	#>
//Return value buffer
<# foreach (var argumentItem in SubFunction.Arguments) { #>
<#= CreateFunctionOutputBufferDeclare(SubFunction, argumentItem) #>
<#	}	#>
<#+
	/// <summary>
	/// Create code declaring variable to set the count the function called.
	/// </summary>
	/// <param name="function">Function information</param>
	/// <returns>Code to declare variable to set the count function called.</returns>
	protected override string CreateFunctionCalledCountBufferDecalre(Function function)
	{
		string calledCountBufferName = base.CreateFunctionCalledCountBufferDecalre(function);
		calledCountBufferName = "extern " + calledCountBufferName;
		calledCountBufferName += ";";
		return calledCountBufferName;
	}

	protected override string CreateFunctionReturnBufferDeclare(Function function)
	{
		string returnBufferName = base.CreateFunctionReturnBufferDeclare(function);
		if (!(string.IsNullOrEmpty(returnBufferName))) {
			returnBufferName = "extern " + returnBufferName;
			returnBufferName += "[];";
		}
		return returnBufferName;
	}
#>

