// ------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン: 16.0.0.0
//  
//     このファイルへの変更は、正しくない動作の原因になる可能性があり、
//     コードが再生成されると失われます。
// </auto-generated>
// ------------------------------------------------------------------------------
namespace AutoTestPrep.Model.Tempaltes.Driver.gtest
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class TestDriverTemplate_gtest_Header : TestDriverTemplate_gtest_Base
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("/*\r\n *\t");
            
            #line 8 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.TargetFunction.Name));
            
            #line default
            #line hidden
            this.Write(" test driver source code.\r\n */\r\n#pragma once\r\n\r\n");
            
            #line 12 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.CreateTestClassDeclareCode()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\nprotected:\r\n");
            
            #line 15 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.CreateSetupMethodDeclareCode()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 16 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.CreateTearDownMethodDeclareCode()));
            
            #line default
            #line hidden
            this.Write("\r\n\r\nprotected:\r\n");
            
            #line 19 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.CreateSetupTestCaseMethodDeclareCode()));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 20 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.CreateTearDownTestCaseMethodDeclareCode()));
            
            #line default
            #line hidden
            this.Write("\r\n};\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 22 "E:\development\TestSupportTools\AutoTestPrep\dev\src\AutoTestPrep\Model\Tempaltes\Driver\gtest\TestDriverTemplate_gtest_Header.tt"


	/// <summary>
	/// Create test class name.
	/// </summary>
	///	<return>Test class name</return>
	protected virtual string CreateTestClassDeclareCode()
	{
		string testClassDeclare = string.Empty;
		testClassDeclare = base.CreateTestClassName();
		testClassDeclare = $"class {testClassDeclare}";
		testClassDeclare = $"{testClassDeclare} : public ::testing::Test";
		return testClassDeclare;
	}

	/// <summary>
	///	Create code to declare method to setup test.
	///	</summary>
	///	<return>Code to declare method to setup test.</return>
	protected virtual string CreateSetupMethodDeclareCode()
	{
		string setupMethodDeclare = string.Empty;
		setupMethodDeclare = base.CreateSetupMethodName();
		setupMethodDeclare = $"void {setupMethodDeclare}();";
		setupMethodDeclare = $"\tvirtual {setupMethodDeclare}";
		return setupMethodDeclare;
	}

	/// <summary>
	///	Create code to declare method to teardown test.
	///	</summary>
	///	<return>Code to declare method to teardown test.</return>
	protected virtual string CreateTearDownMethodDeclareCode()
	{
		string tearDownMethodDeclareCode = string.Empty;
		tearDownMethodDeclareCode = base.CreateTearDownMethodName();
		tearDownMethodDeclareCode = $"void {tearDownMethodDeclareCode}();";
		tearDownMethodDeclareCode = $"\tvirtual {tearDownMethodDeclareCode}";
		return tearDownMethodDeclareCode;
	}

	/// <summary>
	///	Create code to declare method to set up test case.
	///	</summary>
	///	<return>Code to declare method to set up test cases.</return>
	protected virtual string CreateSetupTestCaseMethodDeclareCode()
	{
		string setupTestCaseMethodDeclareCode = string.Empty;
		setupTestCaseMethodDeclareCode = base.CreateTestSetUpMethodName();
		setupTestCaseMethodDeclareCode = $"\tstatic void {setupTestCaseMethodDeclareCode}();";
		return setupTestCaseMethodDeclareCode;
	}

	/// <summary>
	///	Create code to declare method to tear down test case.
	///	</summary>
	///	<return>Code to declare method to tear down tes case.</return>
	protected virtual string CreateTearDownTestCaseMethodDeclareCode()
	{
		string tearDownTestCaseMethodDeclareCode = string.Empty;
		tearDownTestCaseMethodDeclareCode = base.CreateTestTearDownMethodName();
		tearDownTestCaseMethodDeclareCode = $"\tstatic void {tearDownTestCaseMethodDeclareCode}();";
		return tearDownTestCaseMethodDeclareCode;
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
