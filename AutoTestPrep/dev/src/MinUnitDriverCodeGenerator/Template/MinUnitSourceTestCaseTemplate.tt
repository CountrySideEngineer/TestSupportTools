<#@ template language="C#" 
	inherits="MinUnitTemplate" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

static char* <#= CreateTestCaseMethodName(this.TargetFunction, this.TestCase) #>()
{
	//Declare argument for target
<#	
	if (null != this.TargetFunction.Arguments) {
		foreach (var argument in TargetFunction.Arguments) {
#>
	<#= DeclareArgumentVariable(argument) #> <#= argument.Name #>;
<#		
		}
	}
#>
}

	//Declare return value buffer.
	<#= CreateReturnValueBufferDeclare(this.TargetFunction) #>;
	

	//Initialize stub parameters.
	<#= CreateStubInitMethodName(this.TargetFunction) #>();

	//Setup test parameters.
<# foreach (var input in TestCase.Input) {	#>
	<#= input.Name #> = <#= input.Value #>;
<#	}	#>

	<#=	CreateTargetFunctionCall(this.TargetFunction)	#>;

<# foreach (var expect in TestCase.Expects) {	#>
	mu_assert(<#= expect.Value #> == <#= expect.Name #>);
<#	}	#>
}
